{"version":3,"sources":["../../../widgets/test1/Widget.js"],"names":["define","declare","BaseWidget","baseClass","postCreate","inherited","arguments","console","log"],"mappings":"AAAAA,OAAO,CAAC,oBAAD,EAAuB,iBAAvB,CAAP,EACA,UAASC,OAAT,EAAkBC,UAAlB,EAA8B;AAC5B;AACA,WAAOD,QAAQ,CAACC,UAAD,CAAR,EAAsB;;AAE3B;;AAEAC,mBAAW,OAJgB;AAK3B;AACA;AACA;;AAEA;AACAC,oBAAY,sBAAW;AACrB,iBAAKC,SAAL,CAAeC,SAAf;AACAC,oBAAQC,GAAR,CAAY,mBAAZ;AACD;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AApD2B,KAAtB,CAAP;AAwDD,CA3DD","file":"Widget.js","sourcesContent":["define(['dojo/_base/declare', 'jimu/BaseWidget'],\r\nfunction(declare, BaseWidget) {\r\n  //To create a widget, you need to derive from BaseWidget.\r\n  return declare([BaseWidget], {\r\n\r\n    // Custom widget code goes here\r\n\r\n    baseClass: 'test1',\r\n    // this property is set by the framework when widget is loaded.\r\n    // name: 'test1',\r\n    // add additional properties here\r\n\r\n    //methods to communication with app container:\r\n    postCreate: function() {\r\n      this.inherited(arguments);\r\n      console.log('test1::postCreate');\r\n    }\r\n\r\n    // startup: function() {\r\n    //   this.inherited(arguments);\r\n    //   console.log('test1::startup');\r\n    // },\r\n\r\n    // onOpen: function(){\r\n    //   console.log('test1::onOpen');\r\n    // },\r\n\r\n    // onClose: function(){\r\n    //   console.log('test1::onClose');\r\n    // },\r\n\r\n    // onMinimize: function(){\r\n    //   console.log('test1::onMinimize');\r\n    // },\r\n\r\n    // onMaximize: function(){\r\n    //   console.log('test1::onMaximize');\r\n    // },\r\n\r\n    // onSignIn: function(credential){\r\n    //   console.log('test1::onSignIn', credential);\r\n    // },\r\n\r\n    // onSignOut: function(){\r\n    //   console.log('test1::onSignOut');\r\n    // }\r\n\r\n    // onPositionChange: function(){\r\n    //   console.log('test1::onPositionChange');\r\n    // },\r\n\r\n    // resize: function(){\r\n    //   console.log('test1::resize');\r\n    // }\r\n\r\n    //methods to communication between widgets:\r\n\r\n  });\r\n\r\n});\r\n"]}